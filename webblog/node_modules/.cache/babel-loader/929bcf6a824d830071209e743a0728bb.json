{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bonaws\\\\React\\\\React_Js\\\\test1\\\\src\\\\component\\\\Read.js\";\nimport React, { Component } from \"react\";\nimport \"../css/read.css\";\nexport class Read extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    const title = this.props.match.params.title; // get blogs content from api\n\n    fetch(`http://localhost:9000/blog/read/${title}`).then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        blogs: result.data\n      });\n    }, error => {\n      this.setState({\n        isLoaded: false,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      blogs\n    } = this.state;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        className: \"lds-dual-ring\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        className: \"blog-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, blogs.map(blog => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"http://localhost/geeksjapan/uploads/blog/thumbnail/\" + blog.thumbnail,\n        width: \"120\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }))));\n    }\n  }\n\n}\nexport default Read;","map":{"version":3,"sources":["C:/Users/Bonaws/React/React_Js/test1/src/component/Read.js"],"names":["React","Component","Read","constructor","props","state","error","isLoaded","componentDidMount","title","match","params","fetch","then","res","json","result","setState","blogs","data","render","message","map","blog","thumbnail"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,iBAAP;AAEA,OAAO,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAClCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,KAAK,GAAG,KAAKL,KAAL,CAAWM,KAAX,CAAiBC,MAAjB,CAAwBF,KAAtC,CADkB,CAElB;;AACAG,IAAAA,KAAK,CAAE,mCAAkCH,KAAM,EAA1C,CAAL,CACGI,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGIG,MAAM,IAAI;AACR,WAAKC,QAAL,CAAc;AACZV,QAAAA,QAAQ,EAAE,IADE;AAEZW,QAAAA,KAAK,EAAEF,MAAM,CAACG;AAFF,OAAd;AAID,KARL,EAUIb,KAAK,IAAI;AACP,WAAKW,QAAL,CAAc;AACZV,QAAAA,QAAQ,EAAE,KADE;AAEZD,QAAAA;AAFY,OAAd;AAID,KAfL;AAiBD;;AAEDc,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEd,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBW,MAAAA;AAAnB,QAA6B,KAAKb,KAAxC;;AACA,QAAIC,KAAJ,EAAW;AACT,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaA,KAAK,CAACe,OAAnB,CAAP;AACD,KAFD,MAEO,IAAI,CAACd,QAAL,EAAe;AACpB,aAAO;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFM,MAEA;AACL,aACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGW,KAAK,CAACI,GAAN,CAAUC,IAAI,IACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,GAAG,EACD,wDACAA,IAAI,CAACC,SAHT;AAKE,QAAA,KAAK,EAAC,KALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADD,CADH,CADF;AAeD;AACF;;AAvDiC;AA0DpC,eAAetB,IAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../css/read.css\";\r\n\r\nexport class Read extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const title = this.props.match.params.title;\r\n    // get blogs content from api\r\n    fetch(`http://localhost:9000/blog/read/${title}`)\r\n      .then(res => res.json())\r\n      .then(\r\n        result => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            blogs: result.data\r\n          });\r\n        },\r\n\r\n        error => {\r\n          this.setState({\r\n            isLoaded: false,\r\n            error\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    const { error, isLoaded, blogs } = this.state;\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div className=\"lds-dual-ring\"></div>;\r\n    } else {\r\n      return (\r\n        <div className=\"blog-section\">\r\n          {blogs.map(blog => (\r\n            <div>\r\n              <img\r\n                src={\r\n                  \"http://localhost/geeksjapan/uploads/blog/thumbnail/\" +\r\n                  blog.thumbnail\r\n                }\r\n                width=\"120\"\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Read;\r\n"]},"metadata":{},"sourceType":"module"}