{"ast":null,"code":"import history from \"../_helper/history\";\nexport const login = (email, password) => {\n  return dispatch => {\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      // headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    };\n    return fetch(\"http://localhost:9000/login\", requestOptions) // .then(handleResponse)\n    .then(user => {\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      return user;\n    }).then(user => {\n      user && // const user = { email, password };\n      dispatch({\n        type: \"USER_LOGIN_SUCCESS\",\n        user\n      });\n      history.push(\"/\");\n    }, error => {\n      console.log(error);\n    }); // const user = { email, password };\n    // dispatch({ type: \"USER_LOGIN_SUCCESS\", user });\n    // localStorage.setItem(\"user\", JSON.stringify(user));\n    // history.push(\"/admin\");\n  };\n};\n\nfunction handleResponse(response) {\n  return response.text().then(text => {\n    const data = text && JSON.parse(text);\n\n    if (!response.ok) {\n      if (response.status === 401) {// auto logout if 401 response returned from api\n        // logout();\n        // window.location.reload(true);\n      }\n\n      const error = data && data.message || response.statusText;\n      return Promise.reject(error);\n    }\n\n    return data;\n  });\n}","map":{"version":3,"sources":["C:/Users/Bonaws/React/React_Js/first_collab/webblog/src/_action/login.js"],"names":["history","login","email","password","dispatch","requestOptions","method","headers","body","JSON","stringify","fetch","then","user","localStorage","setItem","type","push","error","console","log","handleResponse","response","text","data","parse","ok","status","message","statusText","Promise","reject"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,oBAApB;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxC,SAAOC,QAAQ,IAAI;AACjB,UAAMC,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,KADa;AAErBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFY;AAGrB;AACAC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAER,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAf;AAJe,KAAvB;AAMA,WACEQ,KAAK,CAAC,6BAAD,EAAgCN,cAAhC,CAAL,CACE;AADF,KAEGO,IAFH,CAEQC,IAAI,IAAI;AACZC,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BN,IAAI,CAACC,SAAL,CAAeG,IAAf,CAA7B;AACA,aAAOA,IAAP;AACD,KALH,EAMGD,IANH,CAOIC,IAAI,IAAI;AACNA,MAAAA,IAAI,IACF;AACAT,MAAAA,QAAQ,CAAC;AAAEY,QAAAA,IAAI,EAAE,oBAAR;AAA8BH,QAAAA;AAA9B,OAAD,CAFV;AAGAb,MAAAA,OAAO,CAACiB,IAAR,CAAa,GAAb;AACD,KAZL,EAaIC,KAAK,IAAI;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAfL,CADF,CAPiB,CA0BjB;AACA;AACA;AACA;AACD,GA9BD;AA+BD,CAhCM;;AAkCP,SAASG,cAAT,CAAwBC,QAAxB,EAAkC;AAChC,SAAOA,QAAQ,CAACC,IAAT,GAAgBX,IAAhB,CAAqBW,IAAI,IAAI;AAClC,UAAMC,IAAI,GAAGD,IAAI,IAAId,IAAI,CAACgB,KAAL,CAAWF,IAAX,CAArB;;AACA,QAAI,CAACD,QAAQ,CAACI,EAAd,EAAkB;AAChB,UAAIJ,QAAQ,CAACK,MAAT,KAAoB,GAAxB,EAA6B,CAC3B;AACA;AACA;AACD;;AAED,YAAMT,KAAK,GAAIM,IAAI,IAAIA,IAAI,CAACI,OAAd,IAA0BN,QAAQ,CAACO,UAAjD;AACA,aAAOC,OAAO,CAACC,MAAR,CAAeb,KAAf,CAAP;AACD;;AAED,WAAOM,IAAP;AACD,GAdM,CAAP;AAeD","sourcesContent":["import history from \"../_helper/history\";\r\n\r\nexport const login = (email, password) => {\r\n  return dispatch => {\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      // headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n      body: JSON.stringify({ email, password })\r\n    };\r\n    return (\r\n      fetch(\"http://localhost:9000/login\", requestOptions)\r\n        // .then(handleResponse)\r\n        .then(user => {\r\n          localStorage.setItem(\"user\", JSON.stringify(user));\r\n          return user;\r\n        })\r\n        .then(\r\n          user => {\r\n            user &&\r\n              // const user = { email, password };\r\n              dispatch({ type: \"USER_LOGIN_SUCCESS\", user });\r\n            history.push(\"/\");\r\n          },\r\n          error => {\r\n            console.log(error);\r\n          }\r\n        )\r\n    );\r\n    // const user = { email, password };\r\n    // dispatch({ type: \"USER_LOGIN_SUCCESS\", user });\r\n    // localStorage.setItem(\"user\", JSON.stringify(user));\r\n    // history.push(\"/admin\");\r\n  };\r\n};\r\n\r\nfunction handleResponse(response) {\r\n  return response.text().then(text => {\r\n    const data = text && JSON.parse(text);\r\n    if (!response.ok) {\r\n      if (response.status === 401) {\r\n        // auto logout if 401 response returned from api\r\n        // logout();\r\n        // window.location.reload(true);\r\n      }\r\n\r\n      const error = (data && data.message) || response.statusText;\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    return data;\r\n  });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}