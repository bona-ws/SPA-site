{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bonaws\\\\React\\\\React_Js\\\\test1\\\\src\\\\component\\\\Read.js\";\nimport React, { Component } from \"react\";\nimport \"../css/read.css\";\nexport class Read extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false\n    };\n  }\n\n  formatDate(date) {\n    Intl.DateTimeFormat(\"en-US\", {\n      month: \"long\",\n      day: \"2-digit\",\n      year: \"numeric\"\n    }).format(new Date(date));\n  }\n\n  componentDidMount() {\n    const title = this.props.match.params.title; // get blogs content from api\n\n    fetch(`http://localhost:9000/blog/read/${title}`).then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        blogs: result.data\n      });\n    }, error => {\n      this.setState({\n        isLoaded: false,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      blogs\n    } = this.state;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        className: \"lds-dual-ring\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        className: \"blog-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, blogs.map(blog => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"thumbnail\",\n        src: \"http://localhost/geeksjapan/uploads/blog/thumbnail/\" + blog.thumbnail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, blog.category), React.createElement(\"p\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, blog.title), React.createElement(\"p\", {\n        className: \"sub_title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, blog.sub_title), React.createElement(\"span\", {\n        className: \"author\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"GeeksJapan \"), React.createElement(\"span\", {\n        className: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, Intl.DateTimeFormat(\"en-US\", {\n        month: \"long\",\n        day: \"2-digit\",\n        year: \"numeric\"\n      }).format(new Date(blog.date))), React.createElement(\"span\", {\n        className: \"read-count\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \" \", React.createElement(\"i\", {\n        className: \"fa fa-eye\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), \" \", blog.read_count)))));\n    }\n  }\n\n}\nexport default Read;","map":{"version":3,"sources":["C:/Users/Bonaws/React/React_Js/test1/src/component/Read.js"],"names":["React","Component","Read","constructor","props","state","error","isLoaded","formatDate","date","Intl","DateTimeFormat","month","day","year","format","Date","componentDidMount","title","match","params","fetch","then","res","json","result","setState","blogs","data","render","message","map","blog","thumbnail","category","sub_title","read_count"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../css/read.css\";\r\n\r\nexport class Read extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false\r\n    };\r\n  }\r\n\r\n  formatDate(date) {\r\n    Intl.DateTimeFormat(\"en-US\", {\r\n      month: \"long\",\r\n      day: \"2-digit\",\r\n      year: \"numeric\"\r\n    }).format(new Date(date));\r\n  }\r\n\r\n  componentDidMount() {\r\n    const title = this.props.match.params.title;\r\n    // get blogs content from api\r\n    fetch(`http://localhost:9000/blog/read/${title}`)\r\n      .then(res => res.json())\r\n      .then(\r\n        result => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            blogs: result.data\r\n          });\r\n        },\r\n\r\n        error => {\r\n          this.setState({\r\n            isLoaded: false,\r\n            error\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    const { error, isLoaded, blogs } = this.state;\r\n\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div className=\"lds-dual-ring\"></div>;\r\n    } else {\r\n      return (\r\n        <div className=\"blog-section\">\r\n          {blogs.map(blog => (\r\n            <div>\r\n              <img\r\n                className=\"thumbnail\"\r\n                src={\r\n                  \"http://localhost/geeksjapan/uploads/blog/thumbnail/\" +\r\n                  blog.thumbnail\r\n                }\r\n              />\r\n              <div className=\"content\">\r\n                <p className=\"category\">{blog.category}</p>\r\n                <p className=\"title\">{blog.title}</p>\r\n                <p className=\"sub_title\">{blog.sub_title}</p>\r\n                <span className=\"author\">GeeksJapan </span>\r\n                <span className=\"date\">\r\n                  {Intl.DateTimeFormat(\"en-US\", {\r\n                    month: \"long\",\r\n                    day: \"2-digit\",\r\n                    year: \"numeric\"\r\n                  }).format(new Date(blog.date))}\r\n                </span>\r\n                <span className=\"read-count\">\r\n                  {\" \"}\r\n                  <i className=\"fa fa-eye\"></i> {blog.read_count}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Read;\r\n"]},"metadata":{},"sourceType":"module"}